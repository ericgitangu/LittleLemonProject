plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.example.littlelemon'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.littlelemon"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    android {
        buildFeatures {
            compose true
        }

        composeOptions {
            kotlinCompilerExtensionVersion = "1.5.4"
        }

        kotlinOptions {
            jvmTarget = "17"
        }
        applicationVariants.configureEach {
            // Return compile configuration objects of a variant.
            compileConfiguration.resolutionStrategy {
                // Use Gradle's ResolutionStrategy API
                // to customize how this variant resolves dependencies.
                // fail eagerly on version conflict (includes transitive dependencies)
                // e.g. multiple different versions of the same dependency (group and name are equal)
                failOnVersionConflict()

                // prefer modules that are part of this build (multi-project or composite build) over external modules
                preferProjectModules()

                // force certain versions of dependencies (including transitive)
                //  *append new forced modules:
                force 'asm:asm-all:3.3.1', 'commons-io:commons-io:1.4'
                //  *replace existing forced modules with new ones:
                forcedModules = ['asm:asm-all:3.3.1']

                // cache dynamic versions for 10 minutes
                cacheDynamicVersionsFor 10*60, 'seconds'
                // don't cache changing modules at all
                cacheChangingModulesFor 0, 'seconds'
            }
            // Return runtime configuration objects of a variant.
            runtimeConfiguration.resolutionStrategy {
            }
            // Return annotation processor configuration of a variant.
            annotationProcessorConfiguration.resolutionStrategy {
            }
        }
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    dependenciesInfo {
        includeInApk true
        includeInBundle true
    }
    buildToolsVersion '34.0.0'
}

dependencies {

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.activity:activity-compose:1.8.1'
    implementation "androidx.compose.ui:ui:1.5.4"
    implementation "androidx.compose.compiler:compiler:1.5.6"
    implementation "androidx.compose.ui:ui-tooling-preview:1.5.4"
    implementation 'androidx.compose.material:material:1.5.4'
    implementation 'androidx.compose.material3:material3:1.1.2'
    implementation 'com.android.support:support-annotations:28.0.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.5'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.5.4"
    debugImplementation "androidx.compose.ui:ui-tooling:1.5.4"
    debugImplementation "androidx.compose.ui:ui-test-manifest:1.5.4"
    implementation 'androidx.navigation:navigation-compose:2.7.5'
//    configurations.implementation {
//        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk8'
//    }
}
